CREATE OR REPLACE PACKAGE PKG_ADMIN_CONSULTS IS
       PROCEDURE GET_USER_BINNACLE(PRECORDSET OUT SYS_REFCURSOR, PNPERSON_NAME IN VARCHAR2 default null,
       PNPERSON_LASTNAME IN VARCHAR2 DEFAULT NULL, PNID_PERSON IN VARCHAR2 DEFAULT NULL, PNUSER IN VARCHAR2 DEFAULT NULL);

       PROCEDURE GET_TOP_PROPOSAL(PRECORDSET OUT SYS_REFCURSOR, PNTOP_PROPOSAL IN NUMBER DEFAULT NULL);
       
END PKG_ADMIN_CONSULTS;


CREATE OR REPLACE PACKAGE BODY PKG_ADMIN_CONSULTS IS
       PROCEDURE GET_USER_BINNACLE(PRECORDSET OUT SYS_REFCURSOR, PNPERSON_NAME IN VARCHAR2 default null,
       PNPERSON_LASTNAME IN VARCHAR2 DEFAULT NULL, PNID_PERSON IN VARCHAR2 DEFAULT NULL, PNUSER IN VARCHAR2 DEFAULT NULL) AS
              VMENERROR        EXCEPTION;
       BEGIN
              OPEN pRecordSet FOR
              SELECT COUNT(PERSON.IDENTIFICATION),
                     PERSON.IDENTIFICATION,
                     PERSON.NAME,
                     PERSON.FIRST_LAST_NAME,
                     PERSON.SECOND_LAST_NAME,
                     PERSON.BIRTHDATE,
                     PERSON.ID_COMMUNITY
              FROM PERSON
              INNER JOIN BINNACLE ON PERSON.IDENTIFICATION=BINNACLE.ID_PERSON
              INNER JOIN USERNAME ON PERSON.IDENTIFICATION=USERNAME.IDENTIFICATION
              WHERE BINNACLE.LAST_MODIFICATION_DATE<=(SYSDATE-10) AND
                    PERSON.NAME=NVL(PNPERSON_NAME, PERSON.NAME) AND
                    PERSON.FIRST_LAST_NAME=NVL(PNPERSON_LASTNAME, PERSON.FIRST_LAST_NAME) AND
                    PERSON.IDENTIFICATION=NVL(PNID_PERSON, PERSON.IDENTIFICATION) AND
                    USERNAME.USERNAME=NVL(PNUSER, USERNAME.USERNAME)
              GROUP BY PERSON.IDENTIFICATION,
                       PERSON.NAME,
                       PERSON.FIRST_LAST_NAME,
                       PERSON.SECOND_LAST_NAME,
                       PERSON.BIRTHDATE,
                       PERSON.ID_COMMUNITY;

            IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION 
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                 DBMS_OUTPUT.PUT_LINE (SQLERRM);
          END GET_USER_BINNACLE;

          
       PROCEDURE GET_TOP_PROPOSAL(PRECORDSET OUT SYS_REFCURSOR, PNTOP_PROPOSAL IN NUMBER DEFAULT NULL) AS
                VMENERROR        EXCEPTION;
       BEGIN
              OPEN pRecordSet FOR
              SELECT * 
              FROM (SELECT COUNT(PROPOSAL.ID_PROPOSAL), COMMUNITY.ID_COMMUNITY,
                    COMMUNITY.COMMUNITY_NAME
                    FROM PROPOSAL
                    INNER JOIN PERSON_X_PROPOSAL ON PROPOSAL.ID_PROPOSAL=PERSON_X_PROPOSAL.ID_PROPOSAL
                    INNER JOIN PERSON ON PERSON_X_PROPOSAL.ID_PERSON=PERSON.IDENTIFICATION
                    INNER JOIN COMMUNITY ON PERSON.ID_COMMUNITY=COMMUNITY.ID_COMMUNITY
                    GROUP BY COMMUNITY.ID_COMMUNITY,
                          COMMUNITY.COMMUNITY_NAME
                    ORDER BY COUNT(PROPOSAL.ID_PROPOSAL) DESC)
              WHERE ROWNUM<=PNTOP_PROPOSAL;

            IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION 
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                 DBMS_OUTPUT.PUT_LINE (SQLERRM);
          END GET_TOP_PROPOSAL;

END PKG_ADMIN_CONSULTS;
