CREATE OR REPLACE PACKAGE PKG_ADMIN_BINNACLE  IS
       FUNCTION GET_ID_BINNACLE(PNID_PERSON IN NUMBER)  RETURN NUMBER;
       FUNCTION GET_ID_PERSON(PNID_BINNACLE IN NUMBER)  RETURN NUMBER;
       FUNCTION GET_DATE_CHANGE(PNID_BINNACLE IN NUMBER)  RETURN DATE;
/*       PROCEDURE SET_ID_BINNACLE(NEW_VALUE NUMBER, OLD_VALUE NUMBER);
       PROCEDURE SET_ID_PERSON(NEW_VALUE NUMBER, OLD_VALUE NUMBER);
       PROCEDURE SET_DATE_CHANGE(NEW_VALUE DATE, OLD_VALUE DATE);
       PROCEDURE SET_PASSWORD_USER(NEW_VALUE VARCHAR2, OLD_VALUE VARCHAR2);*/
         PROCEDURE GET_ALL_BINNACLE(PRECORDSET OUT SYS_REFCURSOR, PNID_BINNACLE IN number default null);
END PKG_ADMIN_BINNACLE;


CREATE OR REPLACE PACKAGE BODY PKG_ADMIN_BINNACLE IS
        --FUNCTION GET_ID_BINNACLE IMPLEMENTATION
        FUNCTION GET_ID_BINNACLE(PNID_PERSON NUMBER)  RETURN NUMBER
         IS
                  VMENERROR      EXCEPTION;
                  VNID_BINNACLE  NUMBER(10);
         BEGIN
                  SELECT ID_BINNACLE
                  INTO VNID_BINNACLE
                  FROM BINNACLE
                  WHERE ID_PERSON=PNID_PERSON;
                  RETURN (VNID_BINNACLE);
                  EXCEPTION 
                         WHEN TOO_MANY_ROWS THEN
                           DBMS_OUTPUT.PUT_LINE('YOUR SELECTION RETURNS MORE THAN ONE RESULT.');
                         WHEN NO_DATA_FOUND THEN
                           DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                         WHEN OTHERS THEN
                           DBMS_OUTPUT.PUT_LINE('ERROR');
         END;

        -------------------------------------------------------------------------------
        --FUNCTION GET_ID_PERSON IMPLEMENTATION
        FUNCTION GET_ID_PERSON(PNID_BINNACLE IN NUMBER)  RETURN NUMBER
         IS
                  VMENERROR                          EXCEPTION;
                  VNID_PERSON                        NUMBER(10);
         BEGIN
                  SELECT ID_PERSON
                  INTO VNID_PERSON
                  FROM BINNACLE
                  WHERE ID_BINNACLE=PNID_BINNACLE;
                  RETURN (VNID_PERSON);
                  EXCEPTION 
                         WHEN TOO_MANY_ROWS THEN
                           DBMS_OUTPUT.PUT_LINE('YOUR SELECTION RETURNS MORE THAN ONE RESULT.');
                         WHEN NO_DATA_FOUND THEN
                           DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                         WHEN OTHERS THEN
                           DBMS_OUTPUT.PUT_LINE('ERROR');
         END;

        -------------------------------------------------------------------------------
        --FUNCTION GET_DATE_CHANGE IMPLEMENTATION
        FUNCTION GET_DATE_CHANGE(PNID_BINNACLE IN NUMBER) RETURN DATE
        IS
                 VMENERROR      EXCEPTION;
                 VNDATE_CHANGE  DATE;

        BEGIN
                 SELECT PASS_CHANGE_DATE
                 INTO VNDATE_CHANGE
                 FROM BINNACLE
                 WHERE ID_BINNACLE=PNID_BINNACLE;

                 RETURN (VNDATE_CHANGE);
                 EXCEPTION 
                         WHEN TOO_MANY_ROWS THEN
                           DBMS_OUTPUT.PUT_LINE('YOUR SELECTION RETURNS MORE THAN ONE RESULT.');
                         WHEN NO_DATA_FOUND THEN
                           DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                         WHEN OTHERS THEN
                           DBMS_OUTPUT.PUT_LINE('ERROR');
        END;

/*        -------------------------------------------------------------------------------
        --FUNCTION GET_DATE_CHANGE IMPLEMENTATION
        FUNCTION GET_PASSWORD_USER(PNID_BINNACLE IN NUMBER) RETURN VARCHAR2
        IS
                 VNPASSWORD_USER VARCHAR2(50);

        BEGIN
                 SELECT PASSWORD_USER_BIN
                 INTO VNPASSWORD_USER
                 FROM BINNACLE
                 WHERE ID_BINNACLE=PNID_BINNACLE;
        
                 RETURN (VNPASSWORD_USER);
        END;
        -------------------------------------------------------------------------------
        --PROCEDURE PROC_INSERT_BINNACLE IMPLEMENTATION
        PROCEDURE PROC_INSERT_BINNACLE(ID_BINNACLE NUMBER,ID_PERSON NUMBER ,DATE_CHANGE DATE ,PASSWORD_USER_BIN VARCHAR2) IS

           BEGIN
             INSERT INTO BINNACLE(ID_BINNACLE,ID_PERSON,DATE_CHANGE,PASSWORD_USER_BIN)
             VALUES (ID_BINNACLE,ID_PERSON,DATE_CHANGE,PASSWORD_USER_BIN);

           END PROC_INSERT_BINNACLE;

       PROCEDURE SET_ID_BINNACLE(NEW_VALUE NUMBER, OLD_VALUE NUMBER) IS
         BEGIN
             UPDATE BINNACLE SET ID_BINNACLE=NEW_VALUE WHERE ID_BINNACLE=OLD_VALUE;
         END SET_ID_BINNACLE;


       PROCEDURE SET_ID_PERSON(NEW_VALUE NUMBER, OLD_VALUE NUMBER) IS
         BEGIN
            UPDATE BINNACLE SET ID_PERSON=NEW_VALUE WHERE ID_PERSON=OLD_VALUE;
         END SET_ID_PERSON;


       PROCEDURE SET_DATE_CHANGE(NEW_VALUE DATE, OLD_VALUE DATE) IS
         BEGIN
             UPDATE BINNACLE SET DATE_CHANGE=NEW_VALUE WHERE DATE_CHANGE=OLD_VALUE;
         END SET_DATE_CHANGE;


       PROCEDURE SET_PASSWORD_USER(NEW_VALUE VARCHAR2, OLD_VALUE VARCHAR2)IS
       BEGIN
             UPDATE BINNACLE SET PASSWORD_USER_BIN=NEW_VALUE WHERE PASSWORD_USER_BIN=OLD_VALUE;
         END SET_PASSWORD_USER;
*/

     PROCEDURE GET_ALL_BINNACLE(PRECORDSET OUT SYS_REFCURSOR, PNID_BINNACLE IN number default null) AS
                VMENERROR        EXCEPTION;
       BEGIN
              OPEN pRecordSet FOR
              SELECT *
              FROM BINNACLE
              WHERE ID_BINNACLE = NVL(PNID_BINNACLE, ID_BINNACLE);
              
            IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION 
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
               WHEN DUP_VAL_ON_INDEX THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT IS ALREADY IN THE DATABASE.');
          END GET_ALL_BINNACLE;
END PKG_ADMIN_BINNACLE;
