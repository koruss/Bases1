CREATE OR REPLACE PACKAGE PKG_ADMIN_KIND_PERSON  IS
       FUNCTION GET_ID_USERTYPE(PNUSERTYPE_NAME IN VARCHAR2)  RETURN NUMBER;
       FUNCTION GET_USERTYPE_NAME(PNID_USERTYPE IN NUMBER)  RETURN VARCHAR2;
       PROCEDURE INSERT_KIND_PERSON(PNUSERTYPE_NAME VARCHAR2);
       PROCEDURE SET_USERTYPE_NAME(PNID_USERTYPE NUMBER, PNNEW_VALUE VARCHAR2);
       PROCEDURE GET_ALL_USERTYPE(PRECORDSET OUT SYS_REFCURSOR, PNID_USERTYPE
         IN NUMBER default null);
       PROCEDURE GET_ALL_USERS(PRECORDSET OUT SYS_REFCURSOR);
       procedure VALIDATE_USER(PNUSERNAME in VARCHAR2, PNPASSWORD in VARCHAR2,
         PRECORDSET OUT SYS_REFCURSOR);
       FUNCTION GET_ID_BYUSER(PNUSERNAME IN VARCHAR2)  RETURN VARCHAR2;
       PROCEDURE SET_ADMIN (PNCEDULA VARCHAR2);
END PKG_ADMIN_KIND_PERSON;



CREATE OR REPLACE PACKAGE BODY PKG_ADMIN_KIND_PERSON IS
        --FUNCTION GET_ID_USERTYPE IMPLEMENTATION
        FUNCTION GET_ID_USERTYPE(PNUSERTYPE_NAME IN VARCHAR2)  RETURN NUMBER
         IS
                 VMENERROR      EXCEPTION;
                  VNID_USERTYPE        NUMBER(10);
         BEGIN
                  SELECT ID_USERTYPE
                  INTO VNID_USERTYPE
                  FROM USERTYPE
                  WHERE USERTYPE_NAME=PNUSERTYPE_NAME;
                  RETURN (VNID_USERTYPE);
                 EXCEPTION
                         WHEN TOO_MANY_ROWS THEN
                           DBMS_OUTPUT.PUT_LINE('YOUR SELECTION RETURNS MORE THAN ONE RESULT.');
                         WHEN NO_DATA_FOUND THEN
                           DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                         WHEN OTHERS THEN
                           DBMS_OUTPUT.PUT_LINE('ERROR');
         END;

        -------------------------------------------------------------------------------
        --FUNCTION GET_USERTYPE_NAME IMPLEMENTATION
        FUNCTION GET_USERTYPE_NAME(PNID_USERTYPE IN NUMBER) RETURN VARCHAR2
        IS
                 VMENERROR      EXCEPTION;
                 VNUSERTYPE_NAME VARCHAR(30);

        BEGIN
                  SELECT USERTYPE_NAME
                  INTO VNUSERTYPE_NAME
                  FROM USERTYPE
                  WHERE ID_USERTYPE=PNID_USERTYPE;
                  RETURN (VNUSERTYPE_NAME);
                 EXCEPTION
                         WHEN TOO_MANY_ROWS THEN
                           DBMS_OUTPUT.PUT_LINE('YOUR SELECTION RETURNS MORE THAN ONE RESULT.');
                         WHEN NO_DATA_FOUND THEN
                           DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                         WHEN OTHERS THEN
                           DBMS_OUTPUT.PUT_LINE('ERROR');
        END;

        PROCEDURE INSERT_KIND_PERSON(PNUSERTYPE_NAME VARCHAR2) IS
      VMENERROR                             EXCEPTION;

           BEGIN
             INSERT INTO USERTYPE(ID_USERTYPE,USERTYPE_NAME)
             VALUES (S_USERTYPE.NEXTVAL,PNUSERTYPE_NAME);
            IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
               WHEN DUP_VAL_ON_INDEX THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT IS ALREADY IN THE DATABASE.');

           END INSERT_KIND_PERSON;


        ---------------------------------------------------------------------------------

    PROCEDURE SET_USERTYPE_NAME(PNID_USERTYPE NUMBER, PNNEW_VALUE VARCHAR2) IS
      VMENERROR  EXCEPTION;
         BEGIN
            UPDATE USERTYPE SET USERTYPE_NAME= PNNEW_VALUE WHERE ID_USERTYPE=PNID_USERTYPE;
            IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
               WHEN DUP_VAL_ON_INDEX THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT IS ALREADY IN THE DATABASE.');
         END SET_USERTYPE_NAME;

      PROCEDURE GET_ALL_USERTYPE(PRECORDSET OUT SYS_REFCURSOR, PNID_USERTYPE IN NUMBER default null) AS
                VMENERROR  EXCEPTION;
       BEGIN
              OPEN pRecordSet FOR
              SELECT ID_USERTYPE,USERTYPE_NAME
              FROM USERTYPE
              WHERE ID_USERTYPE = NVL(PNID_USERTYPE, ID_USERTYPE);

            IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
               WHEN DUP_VAL_ON_INDEX THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT IS ALREADY IN THE DATABASE.');
          END GET_ALL_USERTYPE;


     procedure VALIDATE_USER(PNUSERNAME in VARCHAR2, PNPASSWORD in VARCHAR2,PRECORDSET OUT SYS_REFCURSOR)IS
       BEGIN
         OPEN pRecordSet FOR
         SELECT username,password,id_usertype 
         FROM USERNAME
         WHERE USERNAME=PNUSERNAME AND PASSWORD=PNPASSWORD;
       END;
       
        FUNCTION GET_ID_BYUSER(PNUSERNAME IN VARCHAR2)  RETURN VARCHAR2
         IS
                  VMENERROR      EXCEPTION;
                  VNUSERNAME    VARCHAR2(30);
         BEGIN
                  SELECT IDENTIFICATION
                  INTO VNUSERNAME
                  FROM USERNAME
                  WHERE USERNAME=PNUSERNAME;
                  RETURN (VNUSERNAME);
                  EXCEPTION 
                         WHEN TOO_MANY_ROWS THEN
                           DBMS_OUTPUT.PUT_LINE('YOUR SELECTION RETURNS MORE THAN ONE RESULT.');
                         WHEN NO_DATA_FOUND THEN
                           return '-1';
                           DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                         WHEN OTHERS THEN
                           DBMS_OUTPUT.PUT_LINE('ERROR');
         END;
         
         
         
PROCEDURE GET_ALL_USERS(PRECORDSET OUT SYS_REFCURSOR) AS
                VMENERROR        EXCEPTION;
       BEGIN
              OPEN pRecordSet FOR
              SELECT IDENTIFICATION 
              FROM USERNAME
              WHERE ID_USERTYPE >= 1;

            IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION 
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                 DBMS_OUTPUT.PUT_LINE (SQLERRM);
          END GET_ALL_USERS;
          
          
    PROCEDURE SET_ADMIN (PNCEDULA VARCHAR2) IS
      VMENERROR  EXCEPTION;
         BEGIN
            UPDATE USERNAME SET ID_USERTYPE= 0 WHERE IDENTIFICATION=PNCEDULA;
            IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
               WHEN DUP_VAL_ON_INDEX THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT IS ALREADY IN THE DATABASE.');
         END SET_ADMIN;
          
END PKG_ADMIN_KIND_PERSON;
