CREATE OR REPLACE PACKAGE PKG_ADMIN_PROPOSAL_COMMENT  IS
       --FUNCTION GET_ID_COMMENT(PNID_COMMENT IN NUMBER)  RETURN NUMBER;
       FUNCTION GET_COMMENT_DESCRIPTION(PNID_COMMENT IN NUMBER)  RETURN VARCHAR2;
       FUNCTION GET_COMMENT_DATE(PNID_COMMENT IN NUMBER)  RETURN DATE;
       PROCEDURE INSERT_PROPOSAL_COMMENT(PNCOMMENT_DESCRIPTION VARCHAR2,PNCOMMENT_DATE DATE);
       --PROCEDURE SET_ID_COMMENT(PNNEW_VALUE NUMBER, PNOLD_VALUE NUMBER);
       PROCEDURE SET_COMMENT_DESCRIPTION(PNNEW_VALUE VARCHAR2, PNOLD_VALUE VARCHAR2);
       PROCEDURE SET_COMMENT_DATE(PNNEW_VALUE DATE, PNOLD_VALUE DATE);

END PKG_ADMIN_PROPOSAL_COMMENT;


CREATE OR REPLACE PACKAGE BODY PKG_ADMIN_PROPOSAL_COMMENT IS
        --FUNCTION GET_ID_PERSON IMPLEMENTATION
        --FUNCTION GET_ID_COMMENT(PNID_COMMENT IN NUMBER)  RETURN NUMBER
        -- IS
        --          VNID_COMMENT                        NUMBER(10);
        -- BEGIN
        --          SELECT ID_COMMENT
        --          INTO VNID_COMMENT
        --          FROM PROPOSAL_COMMENT
        --          WHERE ID_COMMENT=PNID_COMMENT;
        --          RETURN (VNID_COMMENT);
        -- END;

        -------------------------------------------------------------------------------
        --FUNCTION GET_COMMENT_DESCRIPTION IMPLEMENTATION
        FUNCTION GET_COMMENT_DESCRIPTION(PNID_COMMENT IN NUMBER) RETURN VARCHAR2
        IS
                  VMENERROR      EXCEPTION;
                 VNCOMMENT_DESCRIPTION   VARCHAR2(2000);

        BEGIN
                  SELECT COMMENT_DESCRIPTION
                  INTO VNCOMMENT_DESCRIPTION
                  FROM PROPOSAL_COMMENT
                  WHERE ID_COMMENT=PNID_COMMENT;
                  RETURN (VNCOMMENT_DESCRIPTION);
                  EXCEPTION 
                         WHEN TOO_MANY_ROWS THEN
                           DBMS_OUTPUT.PUT_LINE('YOUR SELECTION RETURNS MORE THAN ONE RESULT.');
                         WHEN NO_DATA_FOUND THEN
                           DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                         WHEN OTHERS THEN
                           DBMS_OUTPUT.PUT_LINE('ERROR');
        END;

        -------------------------------------------------------------------------------
        --FUNCTION GET_COMMENT_DATE IMPLEMENTATION
        FUNCTION GET_COMMENT_DATE(PNID_COMMENT IN NUMBER) RETURN DATE
        IS
                  VMENERROR      EXCEPTION;
                 VNCOMMENT_DATE DATE;

        BEGIN
                  SELECT COMMENT_DATE
                  INTO VNCOMMENT_DATE
                  FROM PROPOSAL_COMMENT
                  WHERE ID_COMMENT=PNID_COMMENT;
                  RETURN (VNCOMMENT_DATE);
                  EXCEPTION 
                         WHEN TOO_MANY_ROWS THEN
                           DBMS_OUTPUT.PUT_LINE('YOUR SELECTION RETURNS MORE THAN ONE RESULT.');
                         WHEN NO_DATA_FOUND THEN
                           DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                         WHEN OTHERS THEN
                           DBMS_OUTPUT.PUT_LINE('ERROR');
        END;

        PROCEDURE INSERT_PROPOSAL_COMMENT(PNCOMMENT_DESCRIPTION VARCHAR2,PNCOMMENT_DATE DATE) IS

           BEGIN
             INSERT INTO PROPOSAL_COMMENT(ID_COMMENT,COMMENT_DESCRIPTION,COMMENT_DATE)
             VALUES (S_COMMENT.NEXTVAL,PNCOMMENT_DESCRIPTION,PNCOMMENT_DATE);

           END INSERT_PROPOSAL_COMMENT;


       --PROCEDURE SET_ID_COMMENT(PNNEW_VALUE NUMBER, PNOLD_VALUE NUMBER) IS
       --  BEGIN
       --      UPDATE PROPOSAL_COMMENT SET ID_COMMENT= PNNEW_VALUE WHERE ID_COMMENT=PNOLD_VALUE;
       --  END SET_ID_COMMENT;


       PROCEDURE SET_COMMENT_DESCRIPTION(PNNEW_VALUE VARCHAR2, PNOLD_VALUE VARCHAR2) IS
         VMENERROR                                   EXCEPTION;
         BEGIN
             UPDATE PROPOSAL_COMMENT SET COMMENT_DESCRIPTION= PNNEW_VALUE WHERE COMMENT_DESCRIPTION=PNOLD_VALUE;
             IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION 
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
         END SET_COMMENT_DESCRIPTION;


      PROCEDURE SET_COMMENT_DATE(PNNEW_VALUE DATE, PNOLD_VALUE DATE) IS
        VMENERROR                            EXCEPTION;
         BEGIN
             UPDATE PROPOSAL_COMMENT SET COMMENT_DATE= PNNEW_VALUE WHERE COMMENT_DATE=PNOLD_VALUE;
             IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION 
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
         END SET_COMMENT_DATE;
END PKG_ADMIN_PROPOSAL_COMMENT;
