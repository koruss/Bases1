CREATE OR REPLACE PACKAGE PKG_ADMIN_TELEPHONE  IS
       FUNCTION GET_ID_PERSON(PNTELEPHONE IN VARCHAR2)  RETURN VARCHAR2;
       FUNCTION GET_PHONE_NUMBER(PNIDENTIFICATION IN VARCHAR2)  RETURN VARCHAR2;
       PROCEDURE INSERT_TELEPHONE(PNTELEPHONE VARCHAR2, PNIDENTIFICATION VARCHAR2);
       PROCEDURE SET_ID_PERSON(PNTELEPHONE VARCHAR2, PNNEW_VALUE VARCHAR2);
       PROCEDURE SET_PHONE_NUMBER(PNIDENTIFICATION VARCHAR2, PNNEW_VALUE VARCHAR2);
       PROCEDURE GET_ALL_TELEPHONE(PRECORDSET OUT SYS_REFCURSOR, PNIDENTIFICATION IN VARCHAR2 default null);
END PKG_ADMIN_TELEPHONE;


CREATE OR REPLACE PACKAGE BODY PKG_ADMIN_TELEPHONE IS
        --FUNCTION GET_PHONE_NUMBER IMPLEMENTATION
        FUNCTION GET_PHONE_NUMBER(PNIDENTIFICATION IN VARCHAR2)  RETURN VARCHAR2
         IS
                  VMENERROR      EXCEPTION;
                  VNPHONE_NUMBER   VARCHAR2(15);
         BEGIN
                  SELECT TELEPHONE
                  INTO VNPHONE_NUMBER
                  FROM TELEPHONE
                  WHERE IDENTIFICATION=PNIDENTIFICATION;
                  RETURN (VNPHONE_NUMBER);
                  EXCEPTION 
                         WHEN TOO_MANY_ROWS THEN
                           DBMS_OUTPUT.PUT_LINE('YOUR SELECTION RETURNS MORE THAN ONE RESULT.');
                         WHEN NO_DATA_FOUND THEN
                           DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                         WHEN OTHERS THEN
                           DBMS_OUTPUT.PUT_LINE('ERROR');
         END;

        -------------------------------------------------------------------------------
        --FUNCTION GET_ID_PERSON IMPLEMENTATION
        FUNCTION GET_ID_PERSON(PNTELEPHONE IN VARCHAR2) RETURN VARCHAR2
        IS
                  VMENERROR      EXCEPTION;
                 VNID_PERSON VARCHAR2(20);

        BEGIN
                  SELECT IDENTIFICATION
                  INTO VNID_PERSON
                  FROM TELEPHONE
                  WHERE TELEPHONE=PNTELEPHONE;
                  RETURN (VNID_PERSON);
                  EXCEPTION 
                         WHEN TOO_MANY_ROWS THEN
                           DBMS_OUTPUT.PUT_LINE('YOUR SELECTION RETURNS MORE THAN ONE RESULT.');
                         WHEN NO_DATA_FOUND THEN
                           DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                         WHEN OTHERS THEN
                           DBMS_OUTPUT.PUT_LINE('ERROR');
        END;

        PROCEDURE INSERT_TELEPHONE(PNTELEPHONE VARCHAR2, PNIDENTIFICATION VARCHAR2) IS
        VMENERROR                         EXCEPTION;

           BEGIN
             INSERT INTO TELEPHONE(TELEPHONE,IDENTIFICATION)
             VALUES (PNTELEPHONE,PNIDENTIFICATION);
              
            IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION 
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
               WHEN DUP_VAL_ON_INDEX THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT IS ALREADY IN THE DATABASE.');

           END INSERT_TELEPHONE;

           ---------------------------------------------------------------------------------
    PROCEDURE SET_ID_PERSON(PNTELEPHONE VARCHAR2, PNNEW_VALUE VARCHAR2) IS
      VMENERROR                         EXCEPTION;
         BEGIN
             UPDATE TELEPHONE SET IDENTIFICATION= PNNEW_VALUE WHERE TELEPHONE=PNTELEPHONE;
             IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION 
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
               WHEN DUP_VAL_ON_INDEX THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT IS ALREADY IN THE DATABASE.');
         END SET_ID_PERSON;

         ---------------------------------------------------------------------------------
    PROCEDURE SET_PHONE_NUMBER(PNIDENTIFICATION VARCHAR2, PNNEW_VALUE VARCHAR2) IS
      VMENERROR                                 EXCEPTION;
         BEGIN
             UPDATE TELEPHONE SET TELEPHONE= PNNEW_VALUE WHERE IDENTIFICATION=PNIDENTIFICATION;
             IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION 
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
               WHEN DUP_VAL_ON_INDEX THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT IS ALREADY IN THE DATABASE.');
         END SET_PHONE_NUMBER;


      PROCEDURE GET_ALL_TELEPHONE(PRECORDSET OUT SYS_REFCURSOR, PNIDENTIFICATION IN VARCHAR2 default null) AS
                VMENERROR        EXCEPTION;
       BEGIN
              OPEN pRecordSet FOR
              SELECT TELEPHONE,IDENTIFICATION
              FROM TELEPHONE
              WHERE IDENTIFICATION = NVL(PNIDENTIFICATION, IDENTIFICATION);
              
            IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION 
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
               WHEN DUP_VAL_ON_INDEX THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT IS ALREADY IN THE DATABASE.');
          END GET_ALL_TELEPHONE;
END PKG_ADMIN_TELEPHONE;

