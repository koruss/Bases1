CREATE OR REPLACE PACKAGE PKG_USER_CONSULTS IS
       PROCEDURE GET_ALL_PROPOSAL(PRECORDSET OUT SYS_REFCURSOR, PNID_PROPOSAL IN number default null,
       PNVOTE IN NUMBER DEFAULT NULL, PNIN_DATE IN DATE DEFAULT NULL, PNFI_DATE IN DATE DEFAULT NULL,
       PNID_CATEGORY IN NUMBER DEFAULT NULL);
       
       PROCEDURE GET_TOP_PROPOSAL(PRECORDSET OUT SYS_REFCURSOR, PNTOP_PROPOSAL IN NUMBER DEFAULT NULL);
       
       PROCEDURE GET_PROPOSAL_PERSON(PRECORDSET OUT SYS_REFCURSOR, PNID_PERSON IN VARCHAR2 default null);

END PKG_USER_CONSULTS;


CREATE OR REPLACE PACKAGE BODY PKG_USER_CONSULTS IS
       PROCEDURE GET_ALL_PROPOSAL(PRECORDSET OUT SYS_REFCURSOR, PNID_PROPOSAL IN number default null,
       PNVOTE IN NUMBER DEFAULT NULL, PNIN_DATE IN DATE DEFAULT NULL, PNFI_DATE IN DATE DEFAULT NULL, PNID_CATEGORY IN NUMBER DEFAULT NULL) AS
                VMENERROR        EXCEPTION;
       BEGIN
              OPEN pRecordSet FOR
              SELECT PROPOSAL.ID_PROPOSAL, PROPOSAL.TITLE, PROPOSAL.PROPOSAL_DESCRIPTION,
              PROPOSAL.BUDGET, PROPOSAL.VOTE, PROPOSAL.PROPOSAL_DATE, CATEGORY.CATEGORY_NAME 
              FROM PROPOSAL
              INNER JOIN PROPOSAL_X_CATEGORY ON PROPOSAL.ID_PROPOSAL=PROPOSAL_X_CATEGORY.ID_PROPOSAL
              INNER JOIN CATEGORY ON PROPOSAL_X_CATEGORY.ID_CATEGORY=CATEGORY.ID_CATEGORY
              WHERE PROPOSAL.ID_PROPOSAL = NVL(PNID_PROPOSAL, PROPOSAL.ID_PROPOSAL) 
                    AND PROPOSAL.VOTE >= NVL(PNVOTE,PROPOSAL.VOTE) 
                    AND CATEGORY.ID_CATEGORY = NVL(PNID_CATEGORY, CATEGORY.ID_CATEGORY)
                    AND PROPOSAL.PROPOSAL_DATE BETWEEN nvl(PNIN_DATE, To_Date('01/01/1950','DD,MM,YYYY')) AND  
                        nvl(PNFI_DATE, sysdate);

            IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION 
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                 DBMS_OUTPUT.PUT_LINE (SQLERRM);
          END GET_ALL_PROPOSAL;
          
          
          
       PROCEDURE GET_TOP_PROPOSAL(PRECORDSET OUT SYS_REFCURSOR, PNTOP_PROPOSAL IN NUMBER DEFAULT NULL) AS
                VMENERROR        EXCEPTION;
       BEGIN
              OPEN pRecordSet FOR
              SELECT * 
              FROM (SELECT PROPOSAL.TITLE,
                           PROPOSAL.PROPOSAL_DESCRIPTION,
                           PROPOSAL.VOTE
                    FROM PROPOSAL
                    ORDER BY PROPOSAL.VOTE DESC)
              WHERE ROWNUM<=PNTOP_PROPOSAL;

            IF SQL%NOTFOUND THEN
                    RAISE VMENERROR;
            END IF;
            EXCEPTION 
               WHEN VMENERROR THEN
                 DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                 DBMS_OUTPUT.PUT_LINE (SQLERRM);
          END GET_TOP_PROPOSAL;
          
          
          PROCEDURE GET_PROPOSAL_PERSON(PRECORDSET OUT SYS_REFCURSOR, PNID_PERSON IN VARCHAR2 default null) AS
                VMENERROR        EXCEPTION;
           BEGIN
                  OPEN pRecordSet FOR
                  SELECT PROPOSAL.TITLE,
                         PROPOSAL.PROPOSAL_DESCRIPTION,
                         PERSON.IDENTIFICATION
                  FROM PROPOSAL
                  INNER JOIN PERSON_X_PROPOSAL ON PROPOSAL.ID_PROPOSAL=PERSON_X_PROPOSAL.ID_PROPOSAL
                  INNER JOIN PERSON ON PERSON_X_PROPOSAL.ID_PERSON=PERSON.IDENTIFICATION 
                  WHERE PERSON.IDENTIFICATION = NVL(PNID_PERSON, PERSON.IDENTIFICATION)
                  GROUP BY PROPOSAL.TITLE,
                         PROPOSAL.PROPOSAL_DESCRIPTION,
                         PERSON.IDENTIFICATION;

                IF SQL%NOTFOUND THEN
                        RAISE VMENERROR;
                END IF;
                EXCEPTION 
                   WHEN VMENERROR THEN
                     DBMS_OUTPUT.PUT_LINE('THE ELEMENT DOES NOT EXIST IN THE DATABASE.');
                     DBMS_OUTPUT.PUT_LINE (SQLERRM);
              END GET_PROPOSAL_PERSON;  

          
END PKG_USER_CONSULTS;
