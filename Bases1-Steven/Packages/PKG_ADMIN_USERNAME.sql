CREATE OR REPLACE PACKAGE PKG_ADMIN_USERNAME IS
       FUNCTION GET_USERNAME(PNIDENTIFICATION IN VARCHAR2)  RETURN VARCHAR2;
       FUNCTION GET_IDENTIFICATION(PNUSERNAME IN VARCHAR2)  RETURN VARCHAR2;
       FUNCTION GET_PASSWORD(PNUSERNAME IN VARCHAR2 )  RETURN VARCHAR2;
       FUNCTION GET_USERTYPE (PNUSERNAME IN VARCHAR2) RETURN NUMBER;
       PROCEDURE INSERT_USERNAME(PNUSERNAME VARCHAR2,PNPASSWORD VARCHAR2, PNIDENTIFICATION VARCHAR2, PNID_USERTYPE NUMBER);
       PROCEDURE SET_USERNAME(PNNEW_VALUE VARCHAR2, PNOLD_VALUE VARCHAR2);
       PROCEDURE SET_IDENTIFICATION(PNNEW_VALUE VARCHAR2, PNOLD_VALUE VARCHAR2);
       PROCEDURE SET_PASSWORD(PNIDENTIFICATION VARCHAR2,PNNEW_VALUE VARCHAR2, PNOLD_VALUE VARCHAR2);
END PKG_ADMIN_USERNAME;

CREATE OR REPLACE PACKAGE BODY PKG_ADMIN_USERNAME IS
        --FUNCTION GET_USERNAME IMPLEMENTATION
        FUNCTION GET_USERNAME(PNIDENTIFICATION IN VARCHAR2)  RETURN VARCHAR2
         IS
                  VNUSERNAME   VARCHAR2(30);
         BEGIN
                  SELECT USERNAME
                  INTO VNUSERNAME
                  FROM USERNAME
                  WHERE IDENTIFICATION=PNIDENTIFICATION;
                  RETURN (VNUSERNAME);
         END;

        -------------------------------------------------------------------------------
        --FUNCTION GET_IDENTIFICATION IMPLEMENTATION
        FUNCTION GET_IDENTIFICATION(PNUSERNAME IN VARCHAR2)  RETURN VARCHAR2
         IS
                  VNIDENTIFICATION   VARCHAR2(30);
         BEGIN
                  SELECT IDENTIFICATION
                  INTO VNIDENTIFICATION
                  FROM USERNAME
                  WHERE USERNAME=PNUSERNAME;
                  RETURN (VNIDENTIFICATION);
         END;

        -------------------------------------------------------------------------------
        --FUNCTION GET_PASSWORD IMPLEMENTATION
        FUNCTION GET_PASSWORD(PNUSERNAME IN VARCHAR2) RETURN VARCHAR2
        IS
                 VNPASSWORD VARCHAR2(50);

        BEGIN
                  SELECT PASSWORD
                  INTO VNPASSWORD
                  FROM USERNAME
                  WHERE USERNAME=PNUSERNAME;
                  RETURN (VNPASSWORD);
        END;
        
        FUNCTION GET_USERTYPE(PNUSERNAME IN VARCHAR2) RETURN NUMBER
        IS
                 VNUSERTYPE NUMBER;

        BEGIN
                  SELECT ID_USERTYPE
                  INTO VNUSERTYPE
                  FROM USERNAME
                  WHERE USERNAME=PNUSERNAME;
                  RETURN (VNUSERTYPE);
        END;

        PROCEDURE INSERT_USERNAME(PNUSERNAME VARCHAR2,PNPASSWORD VARCHAR2,PNIDENTIFICATION VARCHAR2,PNID_USERTYPE NUMBER) IS
         
           BEGIN
             INSERT INTO USERNAME(USERNAME,PASSWORD,IDENTIFICATION,ID_USERTYPE)
             VALUES (PNUSERNAME,PNPASSWORD,PNIDENTIFICATION,PNID_USERTYPE);
             
           END INSERT_USERNAME;
           
           ---------------------------------------------------------------------------------
    PROCEDURE SET_USERNAME(PNNEW_VALUE VARCHAR2, PNOLD_VALUE VARCHAR2) IS
         BEGIN
             UPDATE USERNAME SET USERNAME= PNNEW_VALUE WHERE USERNAME=PNOLD_VALUE;            
         END SET_USERNAME;
         
         ---------------------------------------------------------------------------------
    PROCEDURE SET_IDENTIFICATION(PNNEW_VALUE VARCHAR2, PNOLD_VALUE VARCHAR2) IS
         BEGIN
             UPDATE USERNAME SET IDENTIFICATION= PNNEW_VALUE WHERE IDENTIFICATION=PNOLD_VALUE;             
         END SET_IDENTIFICATION;
         
         ---------------------------------------------------------------------------------
    PROCEDURE SET_PASSWORD(PNIDENTIFICATION VARCHAR2, PNNEW_VALUE VARCHAR2, PNOLD_VALUE VARCHAR2) IS
         BEGIN
             UPDATE USERNAME SET PASSWORD= PNNEW_VALUE WHERE PASSWORD=PNOLD_VALUE; 
             INSERT INTO BINNACLE (ID_BINNACLE,ID_PERSON,PREVIOUS_PASSWORD,CURRENT_PASSWORD,PASS_CHANGE_DATE)
                    VALUES(S_BINNACLE.NEXTVAL,PNIDENTIFICATION,PNOLD_VALUE,PNNEW_VALUE,SYSDATE);            
         END SET_PASSWORD;
END PKG_ADMIN_USERNAME;
