CREATE OR REPLACE PACKAGE PKG_ADMIN_PARAMETER  IS
       FUNCTION GET_ID_PARAMETER(PNPARAMETER_NAME IN VARCHAR2)  RETURN NUMBER;
       FUNCTION GET_PARAMETER_NAME(PNID_PARAMETER IN NUMBER)  RETURN VARCHAR2;
       FUNCTION GET_PARAMETER_VALUE(PNID_PARAMETER IN NUMBER)  RETURN NUMBER;
       PROCEDURE INSERT_PARAMETER(PNPARAMETER_NAME VARCHAR2,PNPARAMETER_VALUE NUMBER);
       --PROCEDURE SET_ID_PARAMETER(PNNEW_VALUE NUMBER, PNOLD_VALUE NUMBER);
       PROCEDURE SET_PARAMETER_NAME(PNNEW_VALUE VARCHAR2, PNOLD_VALUE VARCHAR2);
       PROCEDURE SET_PARAMETER_VALUE(PNNEW_VALUE VARCHAR2, PNOLD_VALUE VARCHAR2);
END PKG_ADMIN_PARAMETER;

CREATE OR REPLACE PACKAGE BODY PKG_ADMIN_PARAMETER IS
        --FUNCTION GET_ID_PARAMETER IMPLEMENTATION
        FUNCTION GET_ID_PARAMETER(PNPARAMETER_NAME IN VARCHAR2)  RETURN NUMBER
         IS
                  VNID_PARAMETER   NUMBER(10);
         BEGIN
                  SELECT ID_PARAMETER
                  INTO VNID_PARAMETER
                  FROM PARAMETER
                  WHERE PARAMETER_NAME=PNPARAMETER_NAME;
                  RETURN (VNID_PARAMETER);
         END;

        -------------------------------------------------------------------------------
        --FUNCTION GET_PARAMETER_NAME IMPLEMENTATION
        FUNCTION GET_PARAMETER_NAME(PNID_PARAMETER IN NUMBER) RETURN VARCHAR2
        IS
                 VNPARAMETER_NAME VARCHAR2(30);

        BEGIN
                  SELECT PARAMETER_NAME
                  INTO VNPARAMETER_NAME
                  FROM PARAMETER
                  WHERE ID_PARAMETER=PNID_PARAMETER;
                  RETURN (VNPARAMETER_NAME);
        END;

        -------------------------------------------------------------------------------
        --FUNCTION GET_PARAMETER_VALUE IMPLEMENTATION
        FUNCTION GET_PARAMETER_VALUE(PNID_PARAMETER IN NUMBER) RETURN NUMBER
        IS
                 VNPARAMETER_VALUE NUMBER;

        BEGIN
                  SELECT PARAMETER_VALUE
                  INTO VNPARAMETER_VALUE
                  FROM PARAMETER
                  WHERE ID_PARAMETER=PNID_PARAMETER;
                  RETURN (VNPARAMETER_VALUE);
        END;

        PROCEDURE INSERT_PARAMETER(PNPARAMETER_NAME VARCHAR2,PNPARAMETER_VALUE NUMBER) IS
         
           BEGIN
             INSERT INTO PARAMETER(ID_PARAMETER,PARAMETER_NAME,PARAMETER_VALUE)
             VALUES (S_PARAMETER.NEXTVAL,PNPARAMETER_NAME,PNPARAMETER_VALUE);
             
           END INSERT_PARAMETER;
           
           
           ---------------------------------------------------------------------------------
    --PROCEDURE SET_ID_PARAMETER(PNNEW_VALUE NUMBER, PNOLD_VALUE NUMBER) IS
    --     BEGIN
    --         UPDATE PARAMETER SET ID_PARAMETER= PNNEW_VALUE WHERE ID_PARAMETER=PNOLD_VALUE;            
    --     END SET_ID_PARAMETER;
         
         
         ---------------------------------------------------------------------------------
    PROCEDURE SET_PARAMETER_NAME(PNNEW_VALUE VARCHAR2, PNOLD_VALUE VARCHAR2) IS
         BEGIN
             UPDATE PARAMETER SET PARAMETER_NAME= PNNEW_VALUE WHERE PARAMETER_NAME=PNOLD_VALUE;             
         END SET_PARAMETER_NAME;
         
         
         ---------------------------------------------------------------------------------
    PROCEDURE SET_PARAMETER_VALUE(PNNEW_VALUE VARCHAR2, PNOLD_VALUE VARCHAR2) IS
         BEGIN
             UPDATE PARAMETER SET PARAMETER_VALUE= PNNEW_VALUE WHERE PARAMETER_VALUE=PNOLD_VALUE;             
         END SET_PARAMETER_VALUE;
END PKG_ADMIN_PARAMETER;
